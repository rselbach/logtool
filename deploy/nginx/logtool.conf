# Example nginx reverse proxy for Logtool

# Assumes Logtool server is listening on localhost:8080
# and you want to expose it at https://example.com/monitor/

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 443 ssl http2;
  server_name example.com;
  # ssl_certificate /path/to/fullchain.pem;
  # ssl_certificate_key /path/to/privkey.pem;

  # Optional extra security headers
  add_header X-Frame-Options SAMEORIGIN always;
  add_header X-Content-Type-Options nosniff always;

  # Option A: Use Logtool's own login screen (recommended)
  location /monitor/ {
    proxy_pass http://127.0.0.1:8080/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_read_timeout 30s;
    proxy_send_timeout 30s;
  }

  # Option B: Protect via Basic Auth at the proxy (bypasses app login)
  # location /monitor/ {
  #   auth_basic "Restricted";
  #   auth_basic_user_file /etc/nginx/.htpasswd;  # htpasswd -c /etc/nginx/.htpasswd alice
  #   proxy_pass http://127.0.0.1:8080/;
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Forwarded-Proto $scheme;
  # }

  # Option C: Inject a Bearer token header for the whole location (bypasses app login)
  # location /monitor/ {
  #   proxy_set_header Authorization "Bearer mytoken123";
  #   proxy_pass http://127.0.0.1:8080/;
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Forwarded-Proto $scheme;
  # }
}

